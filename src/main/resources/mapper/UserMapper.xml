<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.school.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.example.school.pojo.User" >
    <id column="userId" property="userid" jdbcType="INTEGER" />
    <result column="memberId" property="memberid" jdbcType="INTEGER" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="nickName" property="nickname" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="headportrait" property="headportrait" jdbcType="VARCHAR" />
    <result column="userPassWord" property="userpassword" jdbcType="VARCHAR" />
    <result column="userIsLockout" property="userislockout" jdbcType="BIT" />
    <result column="userUpdateTime" property="userupdatetime" jdbcType="TIMESTAMP" />
    <result column="userCreateTime" property="usercreatetime" jdbcType="TIMESTAMP" />
    <result column="userLastLoginTime" property="userlastlogintime" jdbcType="TIMESTAMP" />
    <result column="userLastLoginIp" property="userlastloginip" jdbcType="VARCHAR" />
    <result column="userPassWrongCout" property="userpasswrongcout" jdbcType="TINYINT" />
    <result column="userLockoutTime" property="userlockouttime" jdbcType="TIMESTAMP" />
    <result column="userEmail" property="useremail" jdbcType="VARCHAR" />
    <result column="userTelephone" property="usertelephone" jdbcType="VARCHAR" />
    <result column="gold" property="gold" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    userId, memberId, userName, nickName, sex, birthday, headportrait, userPassWord, 
    userIsLockout, userUpdateTime, userCreateTime, userLastLoginTime, userLastLoginIp, 
    userPassWrongCout, userLockoutTime, userEmail, userTelephone, gold
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from users
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.school.pojo.User" >
    insert into users (userId, memberId, userName, 
      nickName, sex, birthday, 
      headportrait, userPassWord, userIsLockout, 
      userUpdateTime, userCreateTime, userLastLoginTime, 
      userLastLoginIp, userPassWrongCout, userLockoutTime, 
      userEmail, userTelephone, gold
      )
    values (#{userid,jdbcType=INTEGER}, #{memberid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, 
      #{headportrait,jdbcType=VARCHAR}, #{userpassword,jdbcType=VARCHAR}, #{userislockout,jdbcType=BIT}, 
      #{userupdatetime,jdbcType=TIMESTAMP}, #{usercreatetime,jdbcType=TIMESTAMP}, #{userlastlogintime,jdbcType=TIMESTAMP}, 
      #{userlastloginip,jdbcType=VARCHAR}, #{userpasswrongcout,jdbcType=TINYINT}, #{userlockouttime,jdbcType=TIMESTAMP}, 
      #{useremail,jdbcType=VARCHAR}, #{usertelephone,jdbcType=VARCHAR}, #{gold,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.school.pojo.User" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="memberid != null" >
        memberId,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="nickname != null" >
        nickName,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="headportrait != null" >
        headportrait,
      </if>
      <if test="userpassword != null" >
        userPassWord,
      </if>
      <if test="userislockout != null" >
        userIsLockout,
      </if>
      <if test="userupdatetime != null" >
        userUpdateTime,
      </if>
      <if test="usercreatetime != null" >
        userCreateTime,
      </if>
      <if test="userlastlogintime != null" >
        userLastLoginTime,
      </if>
      <if test="userlastloginip != null" >
        userLastLoginIp,
      </if>
      <if test="userpasswrongcout != null" >
        userPassWrongCout,
      </if>
      <if test="userlockouttime != null" >
        userLockoutTime,
      </if>
      <if test="useremail != null" >
        userEmail,
      </if>
      <if test="usertelephone != null" >
        userTelephone,
      </if>
      <if test="gold != null" >
        gold,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="memberid != null" >
        #{memberid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="headportrait != null" >
        #{headportrait,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="userislockout != null" >
        #{userislockout,jdbcType=BIT},
      </if>
      <if test="userupdatetime != null" >
        #{userupdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="usercreatetime != null" >
        #{usercreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="userlastlogintime != null" >
        #{userlastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="userlastloginip != null" >
        #{userlastloginip,jdbcType=VARCHAR},
      </if>
      <if test="userpasswrongcout != null" >
        #{userpasswrongcout,jdbcType=TINYINT},
      </if>
      <if test="userlockouttime != null" >
        #{userlockouttime,jdbcType=TIMESTAMP},
      </if>
      <if test="useremail != null" >
        #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="usertelephone != null" >
        #{usertelephone,jdbcType=VARCHAR},
      </if>
      <if test="gold != null" >
        #{gold,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.school.pojo.User" >
    update users
    <set >
      <if test="memberid != null" >
        memberId = #{memberid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickName = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="headportrait != null" >
        headportrait = #{headportrait,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        userPassWord = #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="userislockout != null" >
        userIsLockout = #{userislockout,jdbcType=BIT},
      </if>
      <if test="userupdatetime != null" >
        userUpdateTime = #{userupdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="usercreatetime != null" >
        userCreateTime = #{usercreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="userlastlogintime != null" >
        userLastLoginTime = #{userlastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="userlastloginip != null" >
        userLastLoginIp = #{userlastloginip,jdbcType=VARCHAR},
      </if>
      <if test="userpasswrongcout != null" >
        userPassWrongCout = #{userpasswrongcout,jdbcType=TINYINT},
      </if>
      <if test="userlockouttime != null" >
        userLockoutTime = #{userlockouttime,jdbcType=TIMESTAMP},
      </if>
      <if test="useremail != null" >
        userEmail = #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="usertelephone != null" >
        userTelephone = #{usertelephone,jdbcType=VARCHAR},
      </if>
      <if test="gold != null" >
        gold = #{gold,jdbcType=INTEGER},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.school.pojo.User" >
    update users
    set memberId = #{memberid,jdbcType=INTEGER},
      userName = #{username,jdbcType=VARCHAR},
      nickName = #{nickname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      headportrait = #{headportrait,jdbcType=VARCHAR},
      userPassWord = #{userpassword,jdbcType=VARCHAR},
      userIsLockout = #{userislockout,jdbcType=BIT},
      userUpdateTime = #{userupdatetime,jdbcType=TIMESTAMP},
      userCreateTime = #{usercreatetime,jdbcType=TIMESTAMP},
      userLastLoginTime = #{userlastlogintime,jdbcType=TIMESTAMP},
      userLastLoginIp = #{userlastloginip,jdbcType=VARCHAR},
      userPassWrongCout = #{userpasswrongcout,jdbcType=TINYINT},
      userLockoutTime = #{userlockouttime,jdbcType=TIMESTAMP},
      userEmail = #{useremail,jdbcType=VARCHAR},
      userTelephone = #{usertelephone,jdbcType=VARCHAR},
      gold = #{gold,jdbcType=INTEGER}
    where userId = #{userid,jdbcType=INTEGER}
  </update>

	<select id="findUserByName" resultMap="BaseResultMap">

		select * from users where userName =#{name}

	</select>

	<select id="queryRoleByUserId" resultType="java.lang.String">
		SELECT r.rolename FROM role r WHERE r.roleId IN

		(SELECT t.roleId FROM user_role t WHERE t.userId = #{userId})

	</select>

	<select id="queryPermissionByUserId" resultType="java.lang.String">

		SELECT p.permissionname FROM permission p WHERE p.permissionId IN (SELECT
		rp.permissionId FROM rolepermission rp

		WHERE rp.roleId IN (SELECT ur.roleId FROM user_role ur WHERE
		ur.user_roleId = #{userId}))

	</select>

	<insert id="registerUserByNameAndPass">
		
		INSERT INTO users (memberId, userPassword, userName, sex,
		headportrait) VALUES
		(0,#{password},#{username},"0","0")
		
	</insert>


</mapper>