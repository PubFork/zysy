<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.school.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.example.school.pojo.User">
		<id column="userId" property="userid" jdbcType="INTEGER" />
		<result column="member_id" property="memberId" jdbcType="INTEGER" />
		<result column="userPass" property="userpass" jdbcType="VARCHAR" />
		<result column="usersName" property="usersname" jdbcType="VARCHAR" />
		<result column="nickname" property="nickname" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="VARCHAR" />
		<result column="brithday" property="brithday" jdbcType="TIMESTAMP" />
		<result column="headportrait" property="headportrait" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="USER" property="user" jdbcType="VARCHAR" />
		<result column="gold" property="gold" jdbcType="INTEGER" />
		<result column="role_id" property="roleId" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		userId, member_id, userPass, usersName, nickname, sex, brithday,
		headportrait, state,
		USER, gold, role_id
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from users
		where userId = #{userid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from users
		where userId = #{userid,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.example.school.pojo.User">
		insert into users (userId, member_id, userPass,
		usersName, nickname, sex,
		brithday, headportrait, state,
		USER, gold, role_id)
		values (#{userid,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER},
		#{userpass,jdbcType=VARCHAR},
		#{usersname,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR},
		#{brithday,jdbcType=TIMESTAMP}, #{headportrait,jdbcType=VARCHAR},
		#{state,jdbcType=INTEGER},
		#{user,jdbcType=VARCHAR}, #{gold,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.example.school.pojo.User">
		insert into users
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				userId,
			</if>
			<if test="memberId != null">
				member_id,
			</if>
			<if test="userpass != null">
				userPass,
			</if>
			<if test="usersname != null">
				usersName,
			</if>
			<if test="nickname != null">
				nickname,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="brithday != null">
				brithday,
			</if>
			<if test="headportrait != null">
				headportrait,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="user != null">
				USER,
			</if>
			<if test="gold != null">
				gold,
			</if>
			<if test="roleId != null">
				role_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				#{userid,jdbcType=INTEGER},
			</if>
			<if test="memberId != null">
				#{memberId,jdbcType=INTEGER},
			</if>
			<if test="userpass != null">
				#{userpass,jdbcType=VARCHAR},
			</if>
			<if test="usersname != null">
				#{usersname,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				#{nickname,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=VARCHAR},
			</if>
			<if test="brithday != null">
				#{brithday,jdbcType=TIMESTAMP},
			</if>
			<if test="headportrait != null">
				#{headportrait,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="user != null">
				#{user,jdbcType=VARCHAR},
			</if>
			<if test="gold != null">
				#{gold,jdbcType=INTEGER},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.example.school.pojo.User">
		update users
		<set>
			<if test="memberId != null">
				member_id = #{memberId,jdbcType=INTEGER},
			</if>
			<if test="userpass != null">
				userPass = #{userpass,jdbcType=VARCHAR},
			</if>
			<if test="usersname != null">
				usersName = #{usersname,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				nickname = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=VARCHAR},
			</if>
			<if test="brithday != null">
				brithday = #{brithday,jdbcType=TIMESTAMP},
			</if>
			<if test="headportrait != null">
				headportrait = #{headportrait,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="user != null">
				USER = #{user,jdbcType=VARCHAR},
			</if>
			<if test="gold != null">
				gold = #{gold,jdbcType=INTEGER},
			</if>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=INTEGER},
			</if>
		</set>
		where userId = #{userid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.example.school.pojo.User">
		update users
		set member_id = #{memberId,jdbcType=INTEGER},
		userPass = #{userpass,jdbcType=VARCHAR},
		usersName = #{usersname,jdbcType=VARCHAR},
		nickname = #{nickname,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=VARCHAR},
		brithday = #{brithday,jdbcType=TIMESTAMP},
		headportrait = #{headportrait,jdbcType=VARCHAR},
		state = #{state,jdbcType=INTEGER},
		USER = #{user,jdbcType=VARCHAR},
		gold = #{gold,jdbcType=INTEGER},
		role_id = #{roleId,jdbcType=INTEGER}
		where userId = #{userid,jdbcType=INTEGER}
	</update>

	<select id="findUserByName" resultMap="BaseResultMap">

		select * from users where username =#{name}

	</select>

	<select id="queryRoleByUserId" resultType="java.lang.String">
		SELECT r.role_name FROM role r WHERE r.role_id IN

		(SELECT t.role_id FROM user_role t WHERE t.users_id = #{userId})

	</select>

	<select id="queryPermissionByUserId" resultType="java.lang.String">

		SELECT p.permission_name FROM permission p WHERE p.permission_id IN (SELECT
		rp.permission_id FROM rolepermission rp

		WHERE rp.role_id IN (SELECT ur.role_id FROM user_role ur WHERE
		ur.user_roleId = #{userId}))

	</select>
	<insert id="registerUserByNameAndPass">

	</insert>


</mapper>